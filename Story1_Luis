
import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QTextEdit, QAction, QFileDialog, QMessageBox
from PyQt5.QtGui import QIcon


class WordProcessor(QMainWindow):
    def __init__(self):
        super().__init__()

        
        self.setWindowTitle("Word Processor")
        self.setGeometry(100, 100, 800, 600)

    
        self.text_edit = QTextEdit(self)
        self.setCentralWidget(self.text_edit)

        
        self.create_menu()

    def create_menu(self):
        
        menu_bar = self.menuBar()

       
        file_menu = menu_bar.addMenu("File")

        #New File
        new_action = QAction(QIcon(), "New", self)
        new_action.setShortcut("Ctrl+N")
        new_action.triggered.connect(self.new_file)
        file_menu.addAction(new_action)

        #Open File
        open_action = QAction(QIcon(), "Open", self)
        open_action.setShortcut("Ctrl+O")
        open_action.triggered.connect(self.open_file)
        file_menu.addAction(open_action)

        # Save File
        save_action = QAction(QIcon(), "Save", self)
        save_action.setShortcut("Ctrl+S")
        save_action.triggered.connect(self.save_file)
        file_menu.addAction(save_action)


    def new_file(self):
        self.text_edit.clear()

    def open_file(self):
        options = QFileDialog.Options()
        file_path, _ = QFileDialog.getOpenFileName(self, "Open File", "", "Text Files (*.txt);;All Files (*)", options=options)

        if file_path:
            try:
                with open(file_path, 'r') as file:
                    content = file.read()
                    self.text_edit.setText(content)
            except Exception as e:
                QMessageBox.critical(self, "Error", f"Could not open file: {e}")

    def save_file(self):
        options = QFileDialog.Options()
        file_path, _ = QFileDialog.getSaveFileName(self, "Save File", "", "Text Files (*.txt);;All Files (*)", options=options)

        if file_path:
            try:
                with open(file_path, 'w') as file:
                    content = self.text_edit.toPlainText()
                    file.write(content)
            except Exception as e:
                QMessageBox.critical(self, "Error", f"Could not save file: {e}")


if __name__ == "__main__":
    app = QApplication(sys.argv)
    word_processor = WordProcessor()
    word_processor.show()
    sys.exit(app.exec_())


